name: 'Run tests & check coverage workflow'
on:
  workflow_call:
    inputs:
      nodeVersion:
        description: 'Node version to use'
        required: false
        type: string
        default: 'lts/*'
      testScript:
        type: string
        required: false
        description: The test script to run.
        default: npx jest
      runAfterInstall:
        type: string
        required: false
        description: Commands to run after installing dependencies.

jobs:
  run-tests-check-coverage:
    runs-on: ubuntu-20.04
    name: Run tests & check coverage
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: 'Determine package manager'
        run: |
          if [[ -f "pnpm-lock.yaml" ]]; then
            echo "Using pnpm"
            echo "PACKAGE_MANAGER=pnpm" >> $GITHUB_ENV
          else
            echo "Using yarn"
            echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
          fi

      - if: ${{ env.PACKAGE_MANAGER == 'pnpm' }}
        name: 'Install pnpm'
        uses: pnpm/action-setup@129abb77bf5884e578fcaf1f37628e41622cc371
        with:
          version: 8

      - name: 'Install latest node version'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}
          cache: ${{ env.PACKAGE_MANAGER }}

      - name: Install Node packages
        run: $PACKAGE_MANAGER install

      - name: 'Run after install commands'
        run: ${{ inputs.runAfterInstall }}
        if: ${{ inputs.runAfterInstall != '' }}

      - name: Build
        run: $PACKAGE_MANAGER build

      - name: Run tests and prepare coverage report
        run: $PACKAGE_MANAGER test:coverage

      - name: Read coverage text report
        uses: fingerprintjs/action-coverage-report-md@v2
        id: coverage-md

      - name: Jest coverage comment
        id: coverage
        uses: ArtiomTr/jest-coverage-report-action@c026e98ae079f4b0b027252c8e957f5ebd420610
        with:
          package-manager: ${{ env.PACKAGE_MANAGER }}
          output: report-markdown
          test-script: ${{ inputs.testScript }}

      - name: Add comment with coverage report
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31
        with:
          message: |
            ${{ steps.coverage.outputs.report }}
            <details>
              <summary>Show full coverage report</summary>

              ${{ steps.coverage-md.outputs.markdownReport }}
            </details>

      - name: Add coverage report to the job summary
        run: |
          {
            echo "## Code Coverage" 
            echo "" 
            echo "${{ steps.coverage-md.outputs.markdownReport }}"
          } >> $GITHUB_STEP_SUMMARY
