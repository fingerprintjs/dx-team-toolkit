name: 'Generate docs and coverage report'
on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version to use'
        required: false
        type: string
        default: 'lts/*'
      run-after-install:
        type: string
        required: false
        description: Commands to run after installing dependencies.
      prepare-gh-pages-commands:
        required: false
        default: |
          mv docs ./gh-pages
          mv coverage/lcov-report ./gh-pages/coverage
        type: string
        description: >
          Commands to prepare the content of the gh-pages folder. The gh-pages folder will be created automatically.
          Only specify the commands for moving files into it.
      skip-docs-step:
        required: false
        default: false
        type: boolean
        description: "Skip the documentation generation step."

jobs:
  generate-docs-and-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: 'Determine package manager'
        run: |
          if [[ -f "pnpm-lock.yaml" ]]; then
            echo "Using pnpm"
            echo "PACKAGE_MANAGER=pnpm" >> $GITHUB_ENV
          else
            echo "Using yarn"
            echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
          fi

      - if: ${{ env.PACKAGE_MANAGER == 'pnpm' }}
        name: 'Install pnpm'
        uses: pnpm/action-setup@ebcfd6995dade4b0104ac774445cef8b3b4635b0
        with:
          version: 8

      - name: 'Install latest node version'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}
          cache: ${{ env.PACKAGE_MANAGER }}

      - name: Install dependencies
        run: $PACKAGE_MANAGER install ${{ inputs.yarnFlags }}

      - name: Run after install
        run: ${{ inputs.run-after-install }}
        if: ${{ inputs.run-after-install != '' }}

      - name: Build
        run: $PACKAGE_MANAGER build

      - name: Create the docs
        if: ${{ inputs.skip-docs-step != true }}
        run: $PACKAGE_MANAGER run docs

      - name: Collect coverage report
        run: $PACKAGE_MANAGER test:coverage

      - name: Create Coverage Badges
        uses: jaywcjlove/coverage-badges-cli@e07f25709cd25486855c1ba1b26da53576ff3620
        with:
          source: coverage/coverage-summary.json
          output: coverage/lcov-report/badges.svg

      - name: Prepare folder for gh-pages
        run: |
          mkdir gh-pages
          ${{ inputs.prepare-gh-pages-commands }}

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@8817a56e5bfec6e2b08345c81f4d422db53a2cdc
        with:
          branch: gh-pages
          folder: gh-pages
