name: 'Build TypeScript project'
on:
  workflow_call:
    inputs:
      runAfterInstall:
        type: string
        required: false
        description: Commands to run after installing dependencies.
      yarnFlags:
        description: 'Additional flags for yarn install'
        required: false
        type: string
      nodeVersion:
        description: 'Node version to use'
        required: false
        type: string
        default: 'lts/*'
      artifactName:
        description: 'Name of the artifact to upload'
        required: false
        type: string
      artifactPath:
        description: 'Path of the files to upload as artifact'
        required: false
        type: string
        default: './dist'
      runsOn:
        type: string
        required: false
        default: ubuntu-latest
        description: GitHub action runner.
      checkTypes:
        type: boolean
        required: false
        default: true
        description: 'Whether to run type checking.'


jobs:
  build:
    name: 'Build sdk using last node version'
    runs-on: ${{ inputs.runsOn }}
    steps:
      - name: 'Checkout project for pull_request_target trigger'
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Checkout project for other scenarios'
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v4

      - name: 'Determine package manager'
        run: |
          if [[ -f "pnpm-lock.yaml" ]]; then
            echo "Using pnpm"
            echo "PACKAGE_MANAGER=pnpm" >> $GITHUB_ENV
          else
            echo "Using yarn"
            echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
          fi

      - if: ${{ env.PACKAGE_MANAGER == 'pnpm' }}
        name: 'Install pnpm'
        uses: pnpm/action-setup@129abb77bf5884e578fcaf1f37628e41622cc371
        with:
          version: 9

      - name: 'Install latest node version'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}
          cache: ${{ env.PACKAGE_MANAGER }}

      - name: 'Install Dependencies and prepare packages'
        run: $PACKAGE_MANAGER install ${{ inputs.yarnFlags }}
        env:
          CI: true

      - name: 'Run after install'
        run: ${{ inputs.runAfterInstall }}
        if: ${{ inputs.runAfterInstall != '' }}

      - name: 'Build'
        run: $PACKAGE_MANAGER build

      - name: 'Lint'
        run: $PACKAGE_MANAGER lint

      - name: 'Run tests'
        run: $PACKAGE_MANAGER test

      - name: 'Check types'
        if: ${{ inputs.checkTypes }}
        run: $PACKAGE_MANAGER test:dts

      - name: 'Upload artifact'
        if: ${{ inputs.artifactName }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifactName }}
          path: ${{ inputs.artifactPath }}
