name: 'Analyze Commits'
on:
  workflow_call:
    inputs:
      isTest:
        description: 'Determines whether it is a test run. It is only meant to be used in the DX repo itself.'
        required: false
        type: boolean
        default: false
      nodeVersion:
        description: 'Node version to use'
        required: false
        type: string
        default: 'lts/*'

jobs:
  commitlint:
    name: Analyze Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Install latest node version'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.nodeVersion }}
      - uses: wagoid/commitlint-github-action@v5
        id: commitlint
      - if: ${{ failure() && steps.commitlint.outcome == 'failure' }}
        uses: marocchino/sticky-pull-request-comment@3d60a5b2dae89d44e0c6ddc69dd7536aec2071cd
        with:
          header: Commitlint
          recreate: true
          message: |
            ## Wrong commit message format detected
            We use [Semantic Commit Messages](https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716) in our project.
            
            > **Warning**
            > Probably you forgot to activate local git hooks.

            Run the next command in the project root to activate local hooks:
            ```sh
            sh ./install_hooks.sh
            ```
            
            More info you can find in [job logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      - if: ${{ success() }}
        uses: marocchino/sticky-pull-request-comment@3d60a5b2dae89d44e0c6ddc69dd7536aec2071cd
        with:
          header: Commitlint
          hide: true
          hide_classify: "OUTDATED"
  release-notes-comment:
    name: Generate release notes preview
    runs-on: ubuntu-latest
    env:
      TEST_MESSAGE: ${{ inputs.isTest && '### ⚠️ This is a test run of the release-notes-comment action that can be found in .github/workflows/analyze-commits.yml' || ''}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Install latest node version'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.nodeVersion }}
      - name: Collect semantic-release-info
        id: semantic_release_info
        uses: fingerprintjs/action-semantic-release-info@v1
      - if: ${{ steps.semantic_release_info.outputs.no_release == 'false' }}
        name: Add comment to the PR
        uses: marocchino/sticky-pull-request-comment@3d60a5b2dae89d44e0c6ddc69dd7536aec2071cd
        with:
          header: ReleasePreview
          recreate: true
          message: |
            ## This PR will create a ${{steps.semantic_release_info.outputs.type}} release :rocket:
            ${{ env.TEST_MESSAGE }}           
            ${{steps.semantic_release_info.outputs.notes}}
      - if: ${{ steps.semantic_release_info.outputs.no_release == 'true' }}
        name: Add comment to the PR
        uses: marocchino/sticky-pull-request-comment@3d60a5b2dae89d44e0c6ddc69dd7536aec2071cd
        with:
          header: ReleasePreview
          recreate: true
          message: |
            ## This PR will not create a new release :rocket:
            ${{ env.TEST_MESSAGE }}
      - name: Add release notes preview to the job summary
        if: ${{ steps.semantic_release_info.outputs.no_release == 'false' }}
        run: |
          echo "## This PR will create a ${{steps.semantic_release_info.outputs.type}} release :rocket:" >> $GITHUB_STEP_SUMMARY
          echo ${{ env.TEST_MESSAGE }} >> $GITHUB_STEP_SUMMARY
          echo "${{steps.semantic_release_info.outputs.notes}}" >> $GITHUB_STEP_SUMMARY
      - name: Add release notes preview to the job summary
        if: ${{ steps.semantic_release_info.outputs.no_release == 'true' }}
        run: |
          echo "## This PR will not create a new release :rocket:" >> $GITHUB_STEP_SUMMARY
          echo ${{ env.TEST_MESSAGE }} >> $GITHUB_STEP_SUMMARY
