name: 'Release Server SDK'
on:
  workflow_call:
    inputs:
      language:
        description: 'Programming language for the project. Supported values are "java", "dotnet", "python", "golang", "flutter" and "php".'
        required: true
        type: string
      language-version:
        description: 'Version of the programming language to setup.'
        required: true
        type: string
      java-version:
        description: 'Version of Java to setup.'
        required: false
        type: string
        default: '11'
      prepare-command:
        description: 'Command to run for project preparation (e.g., installing dependencies).'
        required: false
        type: string
      semantic-release-extra-plugins:
        description: 'Additional plugins to install for the semantic-release action.'
        required: false
        type: string
      appId:
        type: string
        required: false
        description: 'GitHub app id for release process.'
    secrets:
      GH_RELEASE_TOKEN:
        description: 'GitHub token with permissions to create releases and perform other necessary operations.'
        required: true
      APP_PRIVATE_KEY:
        description: 'GitHub App token to request GitHub token.'
        required: false
      PYPI_TOKEN:
        description: 'PyPI token used for publishing Python packages. Required only for Python projects.'
        required: false
      NUGET_API_KEY:
        description: 'NuGet API key for publishing .NET packages. Required only for DotNET projects.'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 'Install Java'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: ${{ inputs.java-version }}
          cache: ${{ inputs.language == 'java' && 'gradle' || '' }}

      - name: 'Install DotNET'
        if: ${{ inputs.language == 'dotnet' }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.language-version }}

      - name: 'Install Python'
        if: ${{ inputs.language == 'python' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.language-version }}

      - name: 'Install Golang'
        if: ${{ inputs.language == 'golang' }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.language-version }}

      - name: 'Install Flutter'
        if: ${{ inputs.language == 'flutter' }}
        uses: subosito/flutter-action@2783a3f08e1baf891508463f8c6653c258246225
        with:
          flutter-version: ${{ inputs.language-version }}
          channel: 'stable'

      - name: 'Install PHP'
        if: ${{ inputs.language == 'php' }}
        uses: shivammathur/setup-php@6d7209f44a25a59e904b1ee9f3b0c33ab2cd888d
        with:
          php-version: ${{ inputs.language-version }}
          coverage: none
          tools: composer:v2

      - name: 'Prepare project'
        if:  ${{ inputs.prepare-command != '' }}
        run: ${{ inputs.prepare-command }}

      - name: 'Semantic Release'
        uses: cycjimmy/semantic-release-action@91ab76a4a393a8d0c4739e9aea1818b56bc953ea
        with:
          extra_plugins: |
            @semantic-release/exec@6.0.3
            conventional-changelog-conventionalcommits@5.0.0
            ${{ inputs.semantic-release-extra-plugins }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
