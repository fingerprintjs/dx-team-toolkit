name: 'Release Server SDK'
on:
  workflow_call:
    inputs:
      language:
        description: 'Programming language for the project. Supported values are "java", "dotnet", "python", "golang", "flutter" and "php".'
        required: true
        type: string
      language-version:
        description: 'Version of the programming language to setup.'
        required: true
        type: string
      java-version:
        description: 'Version of Java to setup.'
        required: false
        type: string
        default: '11'
      prepare-command:
        description: 'Command to run for project preparation (e.g., installing dependencies).'
        required: false
        type: string
      semantic-release-extra-plugins:
        description: 'Additional plugins to install for the semantic-release action.'
        required: false
        type: string
      appId:
        type: string
        required: false
        description: 'GitHub app id for release process.'
    secrets:
      GH_RELEASE_TOKEN:
        description: 'GitHub token with permissions to create releases and perform other necessary operations.'
        required: false
      APP_PRIVATE_KEY:
        description: 'GitHub App token to request GitHub token.'
        required: false
      PYPI_TOKEN:
        description: 'PyPI token used for publishing Python packages. Required only for Python projects.'
        required: false
      NUGET_API_KEY:
        description: 'NuGet API key for publishing .NET packages. Required only for DotNET projects.'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup language
        uses: fingerprintjs/dx-team-toolkit/.github/actions/setup-lang@feature/custom-changeset-commands
        with:
          language: ${{ inputs.language }}
          language-version: ${{ inputs.language-version }}
          java-version: ${{ inputs.java-version }}

      - name: 'Prepare project'
        if: ${{ inputs.prepare-command != '' }}
        run: ${{ inputs.prepare-command }}

      - name: 'Get token for the GitHub App'
        if: ${{ inputs.appId != '' }}
        uses: actions/create-github-app-token@f2acddfb5195534d487896a656232b016a682f3c
        id: app-token
        with:
          app-id: ${{ inputs.appId }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: 'Semantic Release'
        uses: cycjimmy/semantic-release-action@61680d0e9b02ff86f5648ade99e01be17f0260a4
        with:
          extra_plugins: |
            @semantic-release/exec@6.0.3
            conventional-changelog-conventionalcommits@5.0.0
            @fingerprintjs/conventional-changelog-dx-team@0.1.0
            ${{ inputs.semantic-release-extra-plugins }}
        env:
          GITHUB_TOKEN: ${{ inputs.appId != '' && steps.app-token.outputs.token || secrets.GH_RELEASE_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
